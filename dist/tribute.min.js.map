{"version":3,"file":"tribute.min.js","sources":["../src/utils.js","../src/TributeEvents.js","../src/TributeMenuEvents.js","../src/TributeRange.js","../src/TributeSearch.js","../src/Tribute.js"],"sourcesContent":["if (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function(predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw TypeError('\"this\" is null or not defined');\n      }\n\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw TypeError('predicate must be a function');\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1];\n\n      // 5. Let k be 0.\n      var k = 0;\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        }\n        // e. Increase k by 1.\n        k++;\n      }\n\n      // 7. Return undefined.\n      return undefined;\n    },\n    configurable: true,\n    writable: true\n  });\n}\n\nif (typeof window !== 'undefined' && typeof window.CustomEvent !== \"function\") {\n  function CustomEvent(event, params) {\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    }\n    var evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n    return evt\n  }\n\n if (typeof window.Event !== 'undefined') {\n   CustomEvent.prototype = window.Event.prototype\n }\n\n  window.CustomEvent = CustomEvent\n}\n","class TributeEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.events = this;\n  }\n\n  static keys() {\n    return [\n      {\n        key: 9,\n        value: \"TAB\"\n      },\n      {\n        key: 8,\n        value: \"DELETE\"\n      },\n      {\n        key: 13,\n        value: \"ENTER\"\n      },\n      {\n        key: 27,\n        value: \"ESCAPE\"\n      },\n      {\n        key: 32,\n        value: \"SPACE\"\n      },\n      {\n        key: 38,\n        value: \"UP\"\n      },\n      {\n        key: 40,\n        value: \"DOWN\"\n      },\n      {\n        key: 37,\n        value: \"LEFT\"\n      },\n      {\n        key: 39,\n        value: \"RIGHT\"\n      }\n    ];\n  }\n\n  isWordBreak(e) {\n    return this.tribute.wordBreakChars.includes(e.key)\n  }\n\n  bind(element) {\n    element.boundKeydown = this.keydown.bind(element, this);\n    element.boundKeyup = this.keyup.bind(element, this);\n    element.boundInput = this.input.bind(element, this);\n\n    element.addEventListener(\"keydown\", element.boundKeydown, true);\n    element.addEventListener(\"keyup\", element.boundKeyup, true);\n    element.addEventListener(\"input\", element.boundInput, true);\n  }\n\n  unbind(element) {\n    element.removeEventListener(\"keydown\", element.boundKeydown, true);\n    element.removeEventListener(\"keyup\", element.boundKeyup, true);\n    element.removeEventListener(\"input\", element.boundInput, true);\n\n    delete element.boundKeydown;\n    delete element.boundKeyup;\n    delete element.boundInput;\n  }\n\n  keydown(instance, event) {\n    if (instance.shouldDeactivate(event)) {\n      instance.tribute.isActive = false;\n      instance.tribute.hideMenu();\n    }\n\n    let element = this;\n    instance.commandEvent = false;\n\n    if (event.keyCode >= 49 && event.keyCode <= 57) {\n      // numeric keys\n      const suggestionIndex = event.keyCode - 49 // 49 is key 1\n\n      instance.commandEvent = true;\n      instance.callbacks()['numeric'](event, suggestionIndex);\n    } if (event.keyCode >= 97 && event.keyCode <= 105) {\n      // numpad keys\n      const suggestionIndex = event.keyCode - 97  // 97 is key 1\n\n      instance.commandEvent = true;\n      instance.callbacks()['numeric'](event, suggestionIndex);\n    } else if (instance.isWordBreak(event)) {\n      console.log(instance.isWordBreak(event))\n      instance.callbacks()['wordBreak'](event, element);\n    } else {\n      TributeEvents.keys().forEach(o => {\n        if (o.key === event.keyCode) {\n          instance.commandEvent = true;\n          instance.callbacks()[o.value.toLowerCase()](event, element);\n        }\n      });\n    }\n  }\n\n  input(instance, event) {\n    instance.inputEvent = true;\n    instance.keyup.call(this, instance, event);\n  }\n\n  click(instance, event) {\n    let tribute = instance.tribute;\n    if (tribute.menu && tribute.menu.contains(event.target)) {\n      if (event.target.parentNode.className === \"pager\") {\n        if (event.target.id === \"webime-previous\") {\n          tribute.previousPage();\n        } else if (event.target.id === \"webime-next\") {\n          tribute.nextPage();\n        }\n      } else {\n        let li = event.target;\n        event.preventDefault();\n        event.stopPropagation();\n        while (li.nodeName.toLowerCase() !== \"li\") {\n          li = li.parentNode;\n          if (!li || li === tribute.menu) {\n            // throw new Error(\"cannot find the <li> container for the click\");\n            return;\n          }\n        }\n        tribute.selectItemAtIndex(li.getAttribute(\"data-index\"), event);\n        tribute.hideMenu();\n      }\n\n      // TODO: should fire with externalTrigger and target is outside of menu\n    } else if (tribute.current.element && !tribute.current.externalTrigger) {\n      tribute.current.externalTrigger = false;\n      setTimeout(() => tribute.hideMenu());\n    }\n  }\n\n  keyup(instance, event) {\n    if (instance.inputEvent) {\n      instance.inputEvent = false;\n    }\n    instance.updateSelection(this);\n\n    if (event.keyCode === 27) return;\n\n    if (!instance.tribute.allowSpaces && instance.tribute.hasTrailingSpace) {\n      instance.tribute.hasTrailingSpace = false;\n      instance.commandEvent = true;\n      instance.callbacks()[\"space\"](event, this);\n      return;\n    }\n\n    if (!instance.tribute.isActive) {\n      if (instance.tribute.autocompleteMode) {\n        instance.callbacks().triggerChar(event, this, \"\");\n      } else {\n        let keyCode = instance.getKeyCode(instance, this, event);\n\n        if (isNaN(keyCode) || !keyCode) return;\n\n        let trigger = instance.tribute.triggers().find(trigger => {\n          return trigger.charCodeAt(0) === keyCode;\n        });\n\n        if (typeof trigger !== \"undefined\") {\n          instance.callbacks().triggerChar(event, this, trigger);\n        }\n      }\n    }\n\n    if (\n      instance.tribute.current.mentionText.length <\n      instance.tribute.current.collection.menuShowMinLength\n    ) {\n      return;\n    }\n\n    if (\n      ((instance.tribute.current.trigger ||\n        instance.tribute.autocompleteMode) &&\n        instance.commandEvent === false) ||\n      (instance.tribute.isActive && event.keyCode === 8)\n    ) {\n      instance.tribute.showMenuFor(this, true);\n    }\n  }\n\n  shouldDeactivate(event) {\n    if (!this.tribute.isActive) return false;\n\n    if (this.tribute.current.mentionText.length === 0) {\n      let eventKeyPressed = false;\n      TributeEvents.keys().forEach(o => {\n        if (event.keyCode === o.key) eventKeyPressed = true;\n      });\n\n      return !eventKeyPressed;\n    }\n\n    return false;\n  }\n\n  getKeyCode(instance, el, event) {\n    let char;\n    let tribute = instance.tribute;\n    let info = tribute.range.getTriggerInfo(\n      false,\n      tribute.hasTrailingSpace,\n      true,\n      tribute.allowSpaces,\n      tribute.autocompleteMode\n    );\n\n    if (info) {\n      return info.mentionTriggerChar.charCodeAt(0);\n    } else {\n      return false;\n    }\n  }\n\n  updateSelection(el) {\n    this.tribute.current.element = el;\n    let info = this.tribute.range.getTriggerInfo(\n      false,\n      this.tribute.hasTrailingSpace,\n      true,\n      this.tribute.allowSpaces,\n      this.tribute.autocompleteMode\n    );\n\n    if (info) {\n      this.tribute.current.selectedPath = info.mentionSelectedPath;\n      this.tribute.current.mentionText = info.mentionText;\n      this.tribute.current.selectedOffset = info.mentionSelectedOffset;\n    }\n  }\n\n  callbacks() {\n    return {\n      triggerChar: (e, el, trigger) => {\n        let tribute = this.tribute;\n        tribute.current.trigger = trigger;\n\n        let collectionItem = tribute.collection.find(item => {\n          return item.trigger === trigger;\n        });\n\n        tribute.current.collection = collectionItem;\n\n        if (\n          tribute.current.mentionText.length >=\n            tribute.current.collection.menuShowMinLength &&\n          tribute.inputEvent\n        ) {\n          tribute.showMenuFor(el, true);\n        }\n      },\n      enter: (e, el) => {\n        // choose selection\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          setTimeout(() => {\n            this.tribute.selectItemAtIndex(this.tribute.menuSelected, e);\n            this.tribute.hideMenu();\n          }, 0);\n        }\n      },\n      escape: (e, el) => {\n        if (this.tribute.isActive) {\n          e.preventDefault();\n          e.stopPropagation();\n          this.tribute.isActive = false;\n          this.tribute.hideMenu();\n        }\n      },\n      tab: (e, el) => {\n        // choose first match\n        this.callbacks().enter(e, el);\n      },\n      space: (e, el) => {\n        if (this.tribute.isActive) {\n          if (this.tribute.spaceSelectsMatch) {\n            e.spaceSelection = true; // custom property\n            this.callbacks().enter(e, el);\n          } else if (!this.tribute.allowSpaces) {\n            e.stopPropagation();\n            setTimeout(() => {\n              this.tribute.hideMenu();\n              this.tribute.isActive = false;\n            }, 0);\n          }\n        }\n      },\n      up: (e, el) => {\n        // navigate up ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected && selected > 0) {\n            this.tribute.menuSelected--;\n            this.setActiveLi();\n          } else if (selected === 0) {\n            this.tribute.menuSelected = count - 1;\n            this.setActiveLi();\n            this.tribute.menu.scrollTop = this.tribute.menu.scrollHeight;\n          }\n        }\n      },\n      down: (e, el) => {\n        // navigate down ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length - 1,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected) {\n            this.tribute.menuSelected++;\n            this.setActiveLi();\n          } else if (count === selected) {\n            this.tribute.menuSelected = 0;\n            this.setActiveLi();\n            this.tribute.menu.scrollTop = 0;\n          }\n        }\n      },\n      left: (e, el) => {\n        // navigate previous page\n        if (e.shiftKey && !e.ctrlKey && !e.metaKey && !e.altKey && this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          this.tribute.previousPage();\n        }\n      },\n      right: (e, el) => {\n        // navigate next page\n        if (e.shiftKey && !e.ctrlKey && !e.metaKey && !e.altKey && this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          this.tribute.nextPage();\n        }\n      },\n      delete: (e, el) => {\n        if (\n          this.tribute.isActive &&\n          this.tribute.current.mentionText.length < 1\n        ) {\n          this.tribute.hideMenu();\n        } else if (this.tribute.isActive) {\n          this.tribute.showMenuFor(el);\n        }\n      },\n      numeric: (e, index) => {\n        // choose selection\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          setTimeout(() => {\n            this.tribute.selectItemAtIndex(index, e);\n            this.tribute.hideMenu();\n          }, 0);\n        }\n      },\n      wordBreak: (e, el) => {\n        if (this.tribute.isActive) {\n          e.wordBreak = true; // custom property\n          this.callbacks().enter(e, el);\n        }\n      }\n    };\n  }\n\n  setActiveLi(index) {\n    let lis = this.tribute.menu.querySelectorAll(\"li\"),\n      length = lis.length >>> 0;\n\n    if (index) this.tribute.menuSelected = parseInt(index);\n\n    for (let i = 0; i < length; i++) {\n      let li = lis[i];\n      if (i === this.tribute.menuSelected) {\n        li.classList.add(this.tribute.current.collection.selectClass);\n\n        let liClientRect = li.getBoundingClientRect();\n        let menuClientRect = this.tribute.menu.getBoundingClientRect();\n\n        if (liClientRect.bottom > menuClientRect.bottom) {\n          let scrollDistance = liClientRect.bottom - menuClientRect.bottom;\n          this.tribute.menu.scrollTop += scrollDistance;\n        } else if (liClientRect.top < menuClientRect.top) {\n          let scrollDistance = menuClientRect.top - liClientRect.top;\n          this.tribute.menu.scrollTop -= scrollDistance;\n        }\n      } else {\n        li.classList.remove(this.tribute.current.collection.selectClass);\n      }\n    }\n  }\n\n  getFullHeight(elem, includeMargin) {\n    let height = elem.getBoundingClientRect().height;\n\n    if (includeMargin) {\n      let style = elem.currentStyle || window.getComputedStyle(elem);\n      return (\n        height + parseFloat(style.marginTop) + parseFloat(style.marginBottom)\n      );\n    }\n\n    return height;\n  }\n}\n\nexport default TributeEvents;\n","class TributeMenuEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.menuEvents = this;\n    this.menu = this.tribute.menu;\n  }\n\n  bind(menu) {\n    this.menuClickEvent = this.tribute.events.click.bind(null, this);\n    this.menuContainerScrollEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.showMenuFor(this.tribute.current.element, false);\n        }\n      },\n      300,\n      false\n    );\n    this.windowResizeEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.range.positionMenuAtCaret(true);\n        }\n      },\n      300,\n      false\n    );\n\n    // fixes IE11 issues with mousedown\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"mousedown\", this.menuClickEvent, false);\n    window.addEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.addEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.addEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  unbind(menu) {\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"mousedown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    window.removeEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.removeEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.removeEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  debounce(func, wait, immediate) {\n    var timeout;\n    return () => {\n      var context = this,\n        args = arguments;\n      var later = () => {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  }\n}\n\nexport default TributeMenuEvents;\n","// Thanks to https://github.com/jeff-collins/ment.io\nimport \"./utils\";\n\nclass TributeRange {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.range = this\n    }\n\n    getDocument() {\n        let iframe\n        if (this.tribute.current.collection) {\n            iframe = this.tribute.current.collection.iframe\n        }\n\n        if (!iframe) {\n            return document\n        }\n\n        return iframe.contentWindow.document\n    }\n\n    positionMenuAtCaret(scrollTo) {\n        let context = this.tribute.current,\n            coordinates\n\n        let info = this.getTriggerInfo(false, this.tribute.hasTrailingSpace, true, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (typeof info !== 'undefined') {\n\n            if(!this.tribute.positionMenu){\n                this.tribute.menu.style.cssText = `display: block;`\n                return\n            }\n\n            if (!this.isContentEditable(context.element)) {\n                coordinates = this.getTextAreaOrInputUnderlinePosition(this.tribute.current.element,\n                    info.mentionPosition)\n            }\n            else {\n                coordinates = this.getContentEditableCaretPosition(info.mentionPosition)\n            }\n\n            this.tribute.menu.style.cssText = `top: ${coordinates.top}px;\n                                     left: ${coordinates.left}px;\n                                     right: ${coordinates.right}px;\n                                     bottom: ${coordinates.bottom}px;\n                                     position: absolute;\n                                     display: block;`\n\n            if (coordinates.left === 'auto') {\n                this.tribute.menu.style.left = 'auto'\n            }\n\n            if (coordinates.top === 'auto') {\n                this.tribute.menu.style.top = 'auto'\n            }\n\n            if (scrollTo) this.scrollIntoView()\n\n            window.setTimeout(() => {\n                let menuDimensions = {\n                   width: this.tribute.menu.offsetWidth,\n                   height: this.tribute.menu.offsetHeight\n                }\n                let menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n\n                let menuIsOffScreenHorizontally = window.innerWidth > menuDimensions.width && (menuIsOffScreen.left || menuIsOffScreen.right)\n                let menuIsOffScreenVertically = window.innerHeight > menuDimensions.height && (menuIsOffScreen.top || menuIsOffScreen.bottom)\n                if (menuIsOffScreenHorizontally || menuIsOffScreenVertically) {\n                    this.tribute.menu.style.cssText = 'display: none'\n                    this.positionMenuAtCaret(scrollTo)\n                }\n            }, 0)\n\n        } else {\n            this.tribute.menu.style.cssText = 'display: none'\n        }\n    }\n\n    get menuContainerIsBody() {\n        return this.tribute.menuContainer === document.body || !this.tribute.menuContainer;\n    }\n\n\n    selectElement(targetElement, path, offset) {\n        let range\n        let elem = targetElement\n\n        if (path) {\n            for (var i = 0; i < path.length; i++) {\n                elem = elem.childNodes[path[i]]\n                if (elem === undefined) {\n                    return\n                }\n                while (elem.length < offset) {\n                    offset -= elem.length\n                    elem = elem.nextSibling\n                }\n                if (elem.childNodes.length === 0 && !elem.length) {\n                    elem = elem.previousSibling\n                }\n            }\n        }\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(elem, offset)\n        range.setEnd(elem, offset)\n        range.collapse(true)\n\n        try {\n            sel.removeAllRanges()\n        } catch (error) {}\n\n        sel.addRange(range)\n        targetElement.focus()\n    }\n\n    replaceTriggerText(text, requireLeadingSpace, hasTrailingSpace, originalEvent, item) {\n        let info = this.getTriggerInfo(true, hasTrailingSpace, requireLeadingSpace, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (info !== undefined) {\n            let context = this.tribute.current\n            let replaceEvent = new CustomEvent('tribute-replaced', {\n                detail: {\n                    item: item,\n                    instance: context,\n                    context: info,\n                    event: originalEvent,\n                }\n            })\n\n            if (!this.isContentEditable(context.element)) {\n                let myField = this.tribute.current.element\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : ' '\n                text += textSuffix\n                let startPos = info.mentionPosition\n                let endPos = info.mentionPosition + info.mentionText.length + textSuffix.length\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length - 1\n                }\n                myField.value = myField.value.substring(0, startPos) + text +\n                    myField.value.substring(endPos, myField.value.length)\n                myField.selectionStart = startPos + text.length\n                myField.selectionEnd = startPos + text.length\n            } else {\n                // add a space to the end of the pasted text\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : '\\xA0'\n                text += textSuffix\n                let endPos = info.mentionPosition + info.mentionText.length\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length\n                }\n                this.pasteHtml(text, info.mentionPosition, endPos)\n            }\n\n            context.element.dispatchEvent(new CustomEvent('input', { bubbles: true }))\n            context.element.dispatchEvent(replaceEvent)\n        }\n    }\n\n    pasteHtml(html, startPos, endPos) {\n        let range, sel\n        sel = this.getWindowSelection()\n        range = this.getDocument().createRange()\n        range.setStart(sel.anchorNode, startPos)\n        range.setEnd(sel.anchorNode, endPos)\n        range.deleteContents()\n\n        let el = this.getDocument().createElement('div')\n        el.innerHTML = html\n        let frag = this.getDocument().createDocumentFragment(),\n            node, lastNode\n        while ((node = el.firstChild)) {\n            lastNode = frag.appendChild(node)\n        }\n        range.insertNode(frag)\n\n        // Preserve the selection\n        if (lastNode) {\n            range = range.cloneRange()\n            range.setStartAfter(lastNode)\n            range.collapse(true)\n            sel.removeAllRanges()\n            sel.addRange(range)\n        }\n    }\n\n    getWindowSelection() {\n        if (this.tribute.collection.iframe) {\n            return this.tribute.collection.iframe.contentWindow.getSelection()\n        }\n\n        return window.getSelection()\n    }\n\n    getNodePositionInParent(element) {\n        if (element.parentNode === null) {\n            return 0\n        }\n\n        for (var i = 0; i < element.parentNode.childNodes.length; i++) {\n            let node = element.parentNode.childNodes[i]\n\n            if (node === element) {\n                return i\n            }\n        }\n    }\n\n    getContentEditableSelectedPath(ctx) {\n        let sel = this.getWindowSelection()\n        let selected = sel.anchorNode\n        let path = []\n        let offset\n\n        if (selected != null) {\n            let i\n            let ce = selected.contentEditable\n            while (selected !== null && ce !== 'true') {\n                i = this.getNodePositionInParent(selected)\n                path.push(i)\n                selected = selected.parentNode\n                if (selected !== null) {\n                    ce = selected.contentEditable\n                }\n            }\n            path.reverse()\n\n            // getRangeAt may not exist, need alternative\n            offset = sel.getRangeAt(0).startOffset\n\n            return {\n                selected: selected,\n                path: path,\n                offset: offset\n            }\n        }\n    }\n\n    getTextPrecedingCurrentSelection() {\n        let context = this.tribute.current,\n            text = ''\n\n        if (!this.isContentEditable(context.element)) {\n            let textComponent = this.tribute.current.element;\n            if (textComponent) {\n                let startPos = textComponent.selectionStart\n                if (textComponent.value && startPos >= 0) {\n                    text = textComponent.value.substring(0, startPos)\n                }\n            }\n\n        } else {\n            let selectedElem = this.getWindowSelection().anchorNode\n\n            if (selectedElem != null) {\n                let workingNodeContent = selectedElem.textContent\n                let selectStartOffset = this.getWindowSelection().getRangeAt(0).startOffset\n\n                if (workingNodeContent && selectStartOffset >= 0) {\n                    text = workingNodeContent.substring(0, selectStartOffset)\n                }\n            }\n        }\n\n        return text\n    }\n\n    getTextOfCurrentWord() {\n        let context = this.tribute.current,\n            text = '',\n            start = 0,\n            end = 0;\n        \n        const stopCharacters = [' ', '\\n', '\\r', '\\t', ',', '.']\n\n        if (!this.isContentEditable(context.element)) {\n            let textComponent = this.tribute.current.element;\n            if (textComponent) {\n                if (textComponent.value) {\n                    let inputText = textComponent.value\n\n                    end = textComponent.selectionEnd\n                    let textBeforeCursor = inputText.substr(0, end)\n\n                    let indexOfDelimiter = -1\n                    let idx, d\n                    for (let i = 0; i < stopCharacters.length; i++) {\n                        d = stopCharacters[i]\n                        idx = textBeforeCursor.lastIndexOf(d)\n                        if (idx > indexOfDelimiter) {\n                            indexOfDelimiter = idx\n                        }\n                    }\n\n                    while (end < inputText.length) {\n                        if (stopCharacters.indexOf(inputText[end]) === -1) {\n                            ++end\n                        } else {\n                            break\n                        }\n                    }\n\n                    if (indexOfDelimiter < 0) {\n                        start = 0\n                    } else {\n                        start = indexOfDelimiter + 1\n                    }\n                    text = inputText.substring(start, end)\n                }\n            }\n\n        } else {\n            let selectedElem = this.getWindowSelection().anchorNode\n\n            if (selectedElem != null) {\n                let workingNodeContent = selectedElem.textContent\n                let selectStartOffset = this.getWindowSelection().getRangeAt(0).startOffset\n\n                if (workingNodeContent && selectStartOffset >= 0) {\n                    text = workingNodeContent.substring(0, selectStartOffset)\n                }\n            }\n        }\n\n        return {start, end, text}\n    }\n\n    getLastWordInText(text) {\n        var wordsArray;\n        if (this.tribute.autocompleteSeparator) {\n            wordsArray = text.split(this.tribute.autocompleteSeparator);\n        } else {\n            wordsArray = text.split(/\\s+/);\n        }\n        var wordsCount = wordsArray.length - 1;\n        return wordsArray[wordsCount];\n    }\n\n    getTriggerInfo(menuAlreadyActive, hasTrailingSpace, requireLeadingSpace, allowSpaces, isAutocomplete) {\n        let ctx = this.tribute.current\n        let selected, path, offset\n\n        if (!this.isContentEditable(ctx.element)) {\n            selected = this.tribute.current.element\n        } else {\n            let selectionInfo = this.getContentEditableSelectedPath(ctx)\n\n            if (selectionInfo) {\n                selected = selectionInfo.selected\n                path = selectionInfo.path\n                offset = selectionInfo.offset\n            }\n        }\n\n        let {start, end, text} = this.getTextOfCurrentWord()\n\n        if (isAutocomplete) {\n            return {\n                mentionPosition: start,\n                mentionText: text,\n                mentionSelectedElement: selected,\n                mentionSelectedPath: path,\n                mentionSelectedOffset: offset\n            }\n        }\n\n        let effectiveRange = this.getTextPrecedingCurrentSelection()\n\n        if (effectiveRange !== undefined && effectiveRange !== null) {\n            let mostRecentTriggerCharPos = -1\n            let triggerChar\n\n            this.tribute.collection.forEach(config => {\n                let c = config.trigger\n                let idx = config.requireLeadingSpace ?\n                    this.lastIndexWithLeadingSpace(effectiveRange, c) :\n                    effectiveRange.lastIndexOf(c)\n\n                if (idx > mostRecentTriggerCharPos) {\n                    mostRecentTriggerCharPos = idx\n                    triggerChar = c\n                    requireLeadingSpace = config.requireLeadingSpace\n                }\n            })\n\n            if (mostRecentTriggerCharPos >= 0 &&\n                (\n                    mostRecentTriggerCharPos === 0 ||\n                    !requireLeadingSpace ||\n                    /\\s/.test(\n                        effectiveRange.substring(\n                            mostRecentTriggerCharPos - 1,\n                            mostRecentTriggerCharPos)\n                    )\n                )\n            ) {\n                let currentTriggerSnippet = effectiveRange.substring(mostRecentTriggerCharPos + triggerChar.length,\n                    effectiveRange.length)\n\n                triggerChar = effectiveRange.substring(mostRecentTriggerCharPos, mostRecentTriggerCharPos + triggerChar.length)\n                let firstSnippetChar = currentTriggerSnippet.substring(0, 1)\n                let leadingSpace = currentTriggerSnippet.length > 0 &&\n                    (\n                        firstSnippetChar === ' ' ||\n                        firstSnippetChar === '\\xA0'\n                    )\n                if (hasTrailingSpace) {\n                    currentTriggerSnippet = currentTriggerSnippet.trim()\n                }\n\n                let regex = allowSpaces ? /[^\\S ]/g : /[\\xA0\\s]/g;\n\n                this.tribute.hasTrailingSpace = regex.test(currentTriggerSnippet);\n\n                if (!leadingSpace && (menuAlreadyActive || !(regex.test(currentTriggerSnippet)))) {\n                    return {\n                        mentionPosition: mostRecentTriggerCharPos,\n                        mentionText: currentTriggerSnippet,\n                        mentionSelectedElement: selected,\n                        mentionSelectedPath: path,\n                        mentionSelectedOffset: offset,\n                        mentionTriggerChar: triggerChar\n                    }\n                }\n            }\n        }\n    }\n\n    lastIndexWithLeadingSpace (str, trigger) {\n        let reversedStr = str.split('').reverse().join('')\n        let index = -1\n\n        for (let cidx = 0, len = str.length; cidx < len; cidx++) {\n            let firstChar = cidx === str.length - 1\n            let leadingSpace = /\\s/.test(reversedStr[cidx + 1])\n\n            let match = true\n            for (let triggerIdx = trigger.length - 1; triggerIdx >= 0; triggerIdx--) {\n              if (trigger[triggerIdx] !== reversedStr[cidx-triggerIdx]) {\n                match = false\n                break\n              }\n            }\n\n            if (match && (firstChar || leadingSpace)) {\n                index = str.length - 1 - cidx\n                break\n            }\n        }\n\n        return index\n    }\n\n    isContentEditable(element) {\n        return element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA'\n    }\n\n    isMenuOffScreen(coordinates, menuDimensions) {\n        let windowWidth = window.innerWidth\n        let windowHeight = window.innerHeight\n        let doc = document.documentElement\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\n        let menuTop = typeof coordinates.top === 'number' ? coordinates.top : windowTop + windowHeight - coordinates.bottom - menuDimensions.height\n        let menuRight = typeof coordinates.right === 'number' ? coordinates.right : coordinates.left + menuDimensions.width\n        let menuBottom = typeof coordinates.bottom === 'number' ? coordinates.bottom : coordinates.top + menuDimensions.height\n        let menuLeft = typeof coordinates.left === 'number' ? coordinates.left : windowLeft + windowWidth - coordinates.right - menuDimensions.width\n\n        return {\n            top: menuTop < Math.floor(windowTop),\n            right: menuRight > Math.ceil(windowLeft + windowWidth),\n            bottom: menuBottom > Math.ceil(windowTop + windowHeight),\n            left: menuLeft < Math.floor(windowLeft)\n        }\n    }\n\n    getMenuDimensions() {\n        // Width of the menu depends of its contents and position\n        // We must check what its width would be without any obstruction\n        // This way, we can achieve good positioning for flipping the menu\n        let dimensions = {\n            width: null,\n            height: null\n        }\n\n        this.tribute.menu.style.cssText = `top: 0px;\n                                 left: 0px;\n                                 position: fixed;\n                                 display: block;\n                                 visibility; hidden;`\n       dimensions.width = this.tribute.menu.offsetWidth\n       dimensions.height = this.tribute.menu.offsetHeight\n\n       this.tribute.menu.style.cssText = `display: none;`\n\n       return dimensions\n    }\n\n    getTextAreaOrInputUnderlinePosition(element, position, flipped) {\n        let properties = ['direction', 'boxSizing', 'width', 'height', 'overflowX',\n            'overflowY', 'borderTopWidth', 'borderRightWidth',\n            'borderBottomWidth', 'borderLeftWidth', 'paddingTop',\n            'paddingRight', 'paddingBottom', 'paddingLeft',\n            'fontStyle', 'fontVariant', 'fontWeight', 'fontStretch',\n            'fontSize', 'fontSizeAdjust', 'lineHeight', 'fontFamily',\n            'textAlign', 'textTransform', 'textIndent',\n            'textDecoration', 'letterSpacing', 'wordSpacing'\n        ]\n\n        let isFirefox = (window.mozInnerScreenX !== null)\n\n        let div = this.getDocument().createElement('div')\n        div.id = 'input-textarea-caret-position-mirror-div'\n        this.getDocument().body.appendChild(div)\n\n        let style = div.style\n        let computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle\n\n        style.whiteSpace = 'pre-wrap'\n        if (element.nodeName !== 'INPUT') {\n            style.wordWrap = 'break-word'\n        }\n\n        // position off-screen\n        style.position = 'absolute'\n        style.visibility = 'hidden'\n\n        // transfer the element's properties to the div\n        properties.forEach(prop => {\n            style[prop] = computed[prop]\n        })\n\n        if (isFirefox) {\n            style.width = `${(parseInt(computed.width) - 2)}px`\n            if (element.scrollHeight > parseInt(computed.height))\n                style.overflowY = 'scroll'\n        } else {\n            style.overflow = 'hidden'\n        }\n\n        div.textContent = element.value.substring(0, position)\n\n        if (element.nodeName === 'INPUT') {\n            div.textContent = div.textContent.replace(/\\s/g, ' ')\n        }\n\n        let span = this.getDocument().createElement('span')\n        span.textContent = element.value.substring(position) || '.'\n        div.appendChild(span)\n\n        let rect = element.getBoundingClientRect()\n        let doc = document.documentElement\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\n        let top = 0;\n        let left = 0;\n        if (this.menuContainerIsBody) {\n          top = rect.top;\n          left = rect.left;\n        }\n\n        let coordinates = {\n            top: top + windowTop + span.offsetTop + parseInt(computed.borderTopWidth) + parseInt(computed.fontSize) - element.scrollTop,\n            left: left + windowLeft + span.offsetLeft + parseInt(computed.borderLeftWidth)\n        }\n\n        let windowWidth = window.innerWidth\n        let windowHeight = window.innerHeight\n\n        let menuDimensions = this.getMenuDimensions()\n        let menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n\n        if (menuIsOffScreen.right) {\n            coordinates.right = windowWidth - coordinates.left\n            coordinates.left = 'auto'\n        }\n\n        let parentHeight = this.tribute.menuContainer\n            ? this.tribute.menuContainer.offsetHeight\n            : this.getDocument().body.offsetHeight\n\n        if (menuIsOffScreen.bottom) {\n            let parentRect = this.tribute.menuContainer\n                ? this.tribute.menuContainer.getBoundingClientRect()\n                : this.getDocument().body.getBoundingClientRect()\n            let scrollStillAvailable = parentHeight - (windowHeight - parentRect.top)\n\n            coordinates.bottom = scrollStillAvailable + (windowHeight - rect.top - span.offsetTop)\n            coordinates.top = 'auto'\n        }\n\n        menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n        if (menuIsOffScreen.left) {\n            coordinates.left = windowWidth > menuDimensions.width\n                ? windowLeft + windowWidth - menuDimensions.width\n                : windowLeft\n            delete coordinates.right\n        }\n        if (menuIsOffScreen.top) {\n            coordinates.top = windowHeight > menuDimensions.height\n                ? windowTop + windowHeight - menuDimensions.height\n                : windowTop\n            delete coordinates.bottom\n        }\n\n        this.getDocument().body.removeChild(div)\n        return coordinates\n    }\n\n    getContentEditableCaretPosition(selectedNodePosition) {\n        let range\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(sel.anchorNode, selectedNodePosition)\n        range.setEnd(sel.anchorNode, selectedNodePosition)\n\n        range.collapse(false)\n\n        let rect = range.getBoundingClientRect()\n        let doc = document.documentElement\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\n        let left = rect.left\n        let top = rect.top\n\n        let coordinates = {\n            left: left + windowLeft,\n            top: top + rect.height + windowTop\n        }\n        let windowWidth = window.innerWidth\n        let windowHeight = window.innerHeight\n\n        let menuDimensions = this.getMenuDimensions()\n        let menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n\n        if (menuIsOffScreen.right) {\n            coordinates.left = 'auto'\n            coordinates.right = windowWidth - rect.left - windowLeft\n        }\n\n        let parentHeight = this.tribute.menuContainer\n            ? this.tribute.menuContainer.offsetHeight\n            : this.getDocument().body.offsetHeight\n\n        if (menuIsOffScreen.bottom) {\n            let parentRect = this.tribute.menuContainer\n                ? this.tribute.menuContainer.getBoundingClientRect()\n                : this.getDocument().body.getBoundingClientRect()\n            let scrollStillAvailable = parentHeight - (windowHeight - parentRect.top)\n\n            coordinates.top = 'auto'\n            coordinates.bottom = scrollStillAvailable + (windowHeight - rect.top)\n        }\n\n        menuIsOffScreen = this.isMenuOffScreen(coordinates, menuDimensions)\n        if (menuIsOffScreen.left) {\n            coordinates.left = windowWidth > menuDimensions.width\n                ? windowLeft + windowWidth - menuDimensions.width\n                : windowLeft\n            delete coordinates.right\n        }\n        if (menuIsOffScreen.top) {\n            coordinates.top = windowHeight > menuDimensions.height\n                ? windowTop + windowHeight - menuDimensions.height\n                : windowTop\n            delete coordinates.bottom\n        }\n\n        if (!this.menuContainerIsBody) {\n            coordinates.left = coordinates.left ? coordinates.left - this.tribute.menuContainer.offsetLeft : coordinates.left\n            coordinates.top = coordinates.top ? coordinates.top - this.tribute.menuContainer.offsetTop : coordinates.top\n        }\n\n        return coordinates\n    }\n\n    scrollIntoView(elem) {\n        let reasonableBuffer = 20,\n            clientRect\n        let maxScrollDisplacement = 100\n        let e = this.menu\n\n        if (typeof e === 'undefined') return;\n\n        while (clientRect === undefined || clientRect.height === 0) {\n            clientRect = e.getBoundingClientRect()\n\n            if (clientRect.height === 0) {\n                e = e.childNodes[0]\n                if (e === undefined || !e.getBoundingClientRect) {\n                    return\n                }\n            }\n        }\n\n        let elemTop = clientRect.top\n        let elemBottom = elemTop + clientRect.height\n\n        if (elemTop < 0) {\n            window.scrollTo(0, window.pageYOffset + clientRect.top - reasonableBuffer)\n        } else if (elemBottom > window.innerHeight) {\n            let maxY = window.pageYOffset + clientRect.top - reasonableBuffer\n\n            if (maxY - window.pageYOffset > maxScrollDisplacement) {\n                maxY = window.pageYOffset + maxScrollDisplacement\n            }\n\n            let targetY = window.pageYOffset - (window.innerHeight - elemBottom)\n\n            if (targetY > maxY) {\n                targetY = maxY\n            }\n\n            window.scrollTo(0, targetY)\n        }\n    }\n}\n\n\nexport default TributeRange;\n","// Thanks to https://github.com/mattyork/fuzzy\nclass TributeSearch {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.search = this\n    }\n\n    simpleFilter(pattern, array) {\n        return array.filter(string => {\n            return this.test(pattern, string)\n        })\n    }\n\n    test(pattern, string) {\n        return this.match(pattern, string) !== null\n    }\n\n    match(pattern, string, opts) {\n        opts = opts || {}\n        let patternIdx = 0,\n            result = [],\n            len = string.length,\n            totalScore = 0,\n            currScore = 0,\n            pre = opts.pre || '',\n            post = opts.post || '',\n            compareString = opts.caseSensitive && string || string.toLowerCase(),\n            ch, compareChar\n\n        if (opts.skip) {\n            return {rendered: string, score: 0}\n        }\n\n        pattern = opts.caseSensitive && pattern || pattern.toLowerCase()\n\n        let patternCache = this.traverse(compareString, pattern, 0, 0, [])\n        if (!patternCache) {\n            return null\n        }\n        return {\n            rendered: this.render(string, patternCache.cache, pre, post),\n            score: patternCache.score\n        }\n    }\n\n    traverse(string, pattern, stringIndex, patternIndex, patternCache) {\n        if (this.tribute.autocompleteSeparator) {\n            // if the pattern search at end\n            pattern = pattern.split(this.tribute.autocompleteSeparator).splice(-1)[0];\n        }\n\n        if (pattern.length === patternIndex) {\n\n            // calculate score and copy the cache containing the indices where it's found\n            return {\n                score: this.calculateScore(patternCache),\n                cache: patternCache.slice()\n            }\n        }\n\n        // if string at end or remaining pattern > remaining string\n        if (string.length === stringIndex || pattern.length - patternIndex > string.length - stringIndex) {\n            return undefined\n        }\n\n        let c = pattern[patternIndex]\n        let index = string.indexOf(c, stringIndex)\n        let best, temp\n\n        while (index > -1) {\n            patternCache.push(index)\n            temp = this.traverse(string, pattern, index + 1, patternIndex + 1, patternCache)\n            patternCache.pop()\n\n            // if downstream traversal failed, return best answer so far\n            if (!temp) {\n                return best\n            }\n\n            if (!best || best.score < temp.score) {\n                best = temp\n            }\n\n            index = string.indexOf(c, index + 1)\n        }\n\n        return best\n    }\n\n    calculateScore(patternCache) {\n        let score = 0\n        let temp = 1\n\n        patternCache.forEach((index, i) => {\n            if (i > 0) {\n                if (patternCache[i - 1] + 1 === index) {\n                    temp += temp + 1\n                }\n                else {\n                    temp = 1\n                }\n            }\n\n            score += temp\n        })\n\n        return score\n    }\n\n    render(string, indices, pre, post) {\n        var rendered = string.substring(0, indices[0])\n\n        indices.forEach((index, i) => {\n            rendered += pre + string[index] + post +\n                string.substring(index + 1, (indices[i + 1]) ? indices[i + 1] : string.length)\n        })\n\n        return rendered\n    }\n\n    filter(pattern, arr, opts) {\n        opts = opts || {}\n        return arr\n            .reduce((prev, element, idx, arr) => {\n                let str = element\n\n                if (opts.extract) {\n                    str = opts.extract(element)\n\n                    if (!str) { // take care of undefineds / nulls / etc.\n                        str = ''\n                    }\n                }\n\n                let rendered = this.match(pattern, str, opts)\n\n                if (rendered != null) {\n                    prev[prev.length] = {\n                        string: rendered.rendered,\n                        score: rendered.score,\n                        index: idx,\n                        original: element\n                    }\n                }\n\n                return prev\n            }, [])\n\n        .sort((a, b) => {\n            let compare = b.score - a.score\n            if (compare) return compare\n            return a.index - b.index\n        })\n    }\n}\n\nexport default TributeSearch;\n","import \"./utils\";\nimport TributeEvents from \"./TributeEvents\";\nimport TributeMenuEvents from \"./TributeMenuEvents\";\nimport TributeRange from \"./TributeRange\";\nimport TributeSearch from \"./TributeSearch\";\n\n// TODO rename\nclass Tribute {\n  constructor({\n    values = null,\n    loadingItemTemplate = null,\n    iframe = null,\n    selectClass = \"highlight\",\n    containerClass = \"tribute-container\",\n    itemClass = \"\",\n    trigger = \"@\",\n    autocompleteMode = true, // webIME change\n    autocompleteSeparator = null,\n    selectTemplate = null,\n    menuItemTemplate = null,\n    lookup = \"key\",\n    fillAttr = \"value\",\n    collection = null,\n    menuContainer = null,\n    noMatchTemplate = null,\n    requireLeadingSpace = true,\n    allowSpaces = false,\n    replaceTextSuffix = \"\", // webIME change\n    positionMenu = true,\n    spaceSelectsMatch = true, // webIME change\n    searchOpts = {},\n    menuItemLimit = null,\n    menuShowMinLength = 1, // webIME change\n    menuPageLimit = 9,\n    wordBreakChars = [\".\", \",\", \"?\", \"!\", \"(\", \")\"],\n  }) {\n    this.autocompleteMode = autocompleteMode;\n    this.autocompleteSeparator = autocompleteSeparator;\n    this.menuSelected = 0;\n    this.current = {};\n    this.inputEvent = false;\n    this.isActive = false;\n    this.menuContainer = menuContainer;\n    this.allowSpaces = allowSpaces;\n    this.replaceTextSuffix = replaceTextSuffix;\n    this.positionMenu = positionMenu;\n    this.hasTrailingSpace = false;\n    this.spaceSelectsMatch = spaceSelectsMatch;\n    this.pages = [];\n    this.currentPage = 0;\n    this.wordBreakChars = wordBreakChars;\n\n    if (this.autocompleteMode) {\n      trigger = \"\";\n      allowSpaces = false;\n    }\n\n    if (values) {\n      this.collection = [\n        {\n          // symbol that starts the lookup\n          trigger: trigger,\n\n          // is it wrapped in an iframe\n          iframe: iframe,\n\n          // class applied to selected item\n          selectClass: selectClass,\n\n          // class applied to the Container\n          containerClass: containerClass,\n\n          // class applied to each item\n          itemClass: itemClass,\n\n          // function called on select that retuns the content to insert\n          selectTemplate: (\n            selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n\n          // function called that returns content for an item\n          menuItemTemplate: (\n            menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n\n          // column to search against in the object\n          lookup: lookup,\n\n          // column that contains the content to insert by default\n          fillAttr: fillAttr,\n\n          // array of objects or a function returning an array of objects\n          values: values,\n\n          // useful for when values is an async function\n          loadingItemTemplate: loadingItemTemplate,\n\n          requireLeadingSpace: requireLeadingSpace,\n\n          searchOpts: searchOpts,\n\n          menuItemLimit: menuItemLimit,\n\n          menuShowMinLength: menuShowMinLength,\n\n          menuPageLimit: menuPageLimit,\n        }\n      ];\n    } else if (collection) {\n      if (this.autocompleteMode)\n        console.warn(\n          \"Tribute in autocomplete mode does not work for collections\"\n        );\n      this.collection = collection.map(item => {\n        return {\n          trigger: item.trigger || trigger,\n          iframe: item.iframe || iframe,\n          selectClass: item.selectClass || selectClass,\n          containerClass: item.containerClass || containerClass,\n          itemClass: item.itemClass || itemClass,\n          selectTemplate: (\n            item.selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n          menuItemTemplate: (\n            item.menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n          lookup: item.lookup || lookup,\n          fillAttr: item.fillAttr || fillAttr,\n          values: item.values,\n          loadingItemTemplate: item.loadingItemTemplate,\n          requireLeadingSpace: item.requireLeadingSpace,\n          searchOpts: item.searchOpts || searchOpts,\n          menuItemLimit: item.menuItemLimit || menuItemLimit,\n          menuShowMinLength: item.menuShowMinLength || menuShowMinLength,\n          menuPageLimit: item.menuPageLimit || menuPageLimit,\n          wordBreakChars: item.wordBreakChars || wordBreakChars,\n        };\n      });\n    } else {\n      throw new Error(\"[Tribute] No collection specified.\");\n    }\n\n    new TributeRange(this);\n    new TributeEvents(this);\n    new TributeMenuEvents(this);\n    new TributeSearch(this);\n  }\n\n  get isActive() {\n    return this._isActive;\n  }\n\n  set isActive(val) {\n    if (this._isActive != val) {\n      this._isActive = val;\n      if (this.current.element) {\n        let noMatchEvent = new CustomEvent(`tribute-active-${val}`);\n        this.current.element.dispatchEvent(noMatchEvent);\n      }\n    }\n  }\n\n  static defaultSelectTemplate(item) {\n    if (typeof item === \"undefined\")\n      return `${this.current.collection.trigger}${this.current.mentionText}`;\n    if (this.range.isContentEditable(this.current.element)) {\n      return (\n        '<span class=\"tribute-mention\">' +\n        (this.current.collection.trigger +\n          item.original[this.current.collection.fillAttr]) +\n        \"</span>\"\n      );\n    }\n\n    return (\n      this.current.collection.trigger +\n      item.original[this.current.collection.fillAttr]\n    );\n  }\n\n  static defaultMenuItemTemplate(matchItem) {\n    return matchItem.string;\n  }\n\n  static inputTypes() {\n    return [\"TEXTAREA\", \"INPUT\"];\n  }\n\n  triggers() {\n    return this.collection.map(config => {\n      return config.trigger;\n    });\n  }\n\n  attach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._attach(el[i]);\n      }\n    } else {\n      this._attach(el);\n    }\n  }\n\n  _attach(el) {\n    if (el.hasAttribute(\"data-tribute\")) {\n      console.warn(\"Tribute was already bound to \" + el.nodeName);\n    }\n\n    this.ensureEditable(el);\n    this.events.bind(el);\n    el.setAttribute(\"data-tribute\", true);\n  }\n\n  ensureEditable(element) {\n    if (Tribute.inputTypes().indexOf(element.nodeName) === -1) {\n      if (!element.contentEditable) {\n        throw new Error(\"[Tribute] Cannot bind to \" + element.nodeName + \", not contentEditable\");\n      }\n    }\n  }\n\n  createMenu(containerClass) {\n    let wrapper = this.range.getDocument().createElement(\"div\"),\n      ul = this.range.getDocument().createElement(\"ul\");\n    wrapper.className = containerClass;\n    wrapper.appendChild(ul);\n\n    const pager = this.range.getDocument().createElement(\"div\");\n    pager.className = \"pager\";\n    pager.innerHTML = \"<span id='webime-previous'>&lt;</span><span id='webime-shift'>Shift +</span><span id='webime-next'>&gt;</span>\";\n    wrapper.appendChild(pager);\n\n    if (this.menuContainer) {\n      return this.menuContainer.appendChild(wrapper);\n    }\n\n    return this.range.getDocument().body.appendChild(wrapper);\n  }\n\n  showMenuFor(element, scrollTo) {\n    // Only proceed if menu isn't already shown for the current element & mentionText\n    if (\n      this.isActive &&\n      this.current.element === element &&\n      this.current.mentionText === this.currentMentionTextSnapshot\n    ) {\n      return;\n    }\n    this.currentMentionTextSnapshot = this.current.mentionText;\n\n    // create the menu if it doesn't exist.\n    if (!this.menu) {\n      this.menu = this.createMenu(this.current.collection.containerClass);\n      element.tributeMenu = this.menu;\n      this.menuEvents.bind(this.menu);\n    }\n\n    this.isActive = true;\n    this.menuSelected = 0;\n    this.pages = [];\n    this.currentPage = 0; // Reset to first page\n\n    if (!this.current.mentionText) {\n      this.current.mentionText = \"\";\n    }\n\n    const processValues = values => {\n      // Tribute may not be active any more by the time the value callback returns\n      if (!this.isActive) {\n        return;\n      }\n\n      let items = this.search.filter(this.current.mentionText, values, {\n        pre: this.current.collection.searchOpts.pre || \"<span>\",\n        post: this.current.collection.searchOpts.post || \"</span>\",\n        skip: this.current.collection.searchOpts.skip,\n        extract: el => {\n          if (typeof this.current.collection.lookup === \"string\") {\n            return el[this.current.collection.lookup];\n          } else if (typeof this.current.collection.lookup === \"function\") {\n            return this.current.collection.lookup(el, this.current.mentionText);\n          } else {\n            throw new Error(\n              \"Invalid lookup attribute, lookup must be string or function.\"\n            );\n          }\n        }\n      });\n\n      if (this.current.collection.menuItemLimit) {\n        items = items.slice(0, this.current.collection.menuItemLimit);\n      }\n\n      const pages = [];\n      let page = [],\n          pageItemIndex = 0;\n      items.forEach((item, index) => {\n        page.push(item);\n        pageItemIndex++;\n\n        if (pageItemIndex == this.current.collection.menuPageLimit) {\n          pages.push(page);\n          page = [];\n          pageItemIndex = 0;\n        } else if (index + 1 == items.length) {\n          // Last item\n          pages.push(page);\n        }\n      });\n      this.pages = pages;\n      this.currentPage = 0; // Reset to first page\n      this.makePage();\n    };\n\n    if (typeof this.current.collection.values === \"function\") {\n      if (this.current.collection.loadingItemTemplate) {\n        this.menu.querySelector(\"ul\").innerHTML = this.current.collection.loadingItemTemplate;\n        this.range.positionMenuAtCaret(scrollTo);\n      }\n\n      this.current.collection.values(this.current.mentionText, processValues);\n    } else {\n      processValues(this.current.collection.values);\n    }\n  }\n\n  makeList (items) {\n    this.current.filteredItems = items;\n\n    let ul = this.menu.querySelector(\"ul\");\n\n    this.range.positionMenuAtCaret(scrollTo);\n\n    if (!items.length) {\n      let noMatchEvent = new CustomEvent(\"tribute-no-match\", {\n        detail: this.menu\n      });\n      this.current.element.dispatchEvent(noMatchEvent);\n      if (\n        (typeof this.current.collection.noMatchTemplate === \"function\" &&\n          !this.current.collection.noMatchTemplate()) ||\n        !this.current.collection.noMatchTemplate\n      ) {\n        this.hideMenu();\n      } else {\n        typeof this.current.collection.noMatchTemplate === \"function\"\n          ? (ul.innerHTML = this.current.collection.noMatchTemplate())\n          : (ul.innerHTML = this.current.collection.noMatchTemplate);\n      }\n\n      return;\n    }\n\n    ul.innerHTML = \"\";\n    let fragment = this.range.getDocument().createDocumentFragment();\n\n    for (let index = 0; index < items.length; index++) {\n      const item = items[index];\n\n      let li = this.range.getDocument().createElement(\"li\");\n      li.setAttribute(\"data-index\", index);\n      li.className = this.current.collection.itemClass;\n      li.addEventListener(\"mousemove\", e => {\n        let [li, index] = this._findLiTarget(e.target);\n        if (e.movementY !== 0) {\n          this.events.setActiveLi(index);\n        }\n      });\n      if (this.menuSelected === index) {\n        li.classList.add(this.current.collection.selectClass);\n      }\n      li.innerHTML = `<div class=\"index\">${index + 1}:</div><div class=\"suggestion\">` + this.current.collection.menuItemTemplate(item) + `</div>`;\n      fragment.appendChild(li);\n    }\n    ul.appendChild(fragment);\n  }\n\n  // Make current page\n  makePage () {\n    if (!this.pages[this.currentPage]) {\n      return;\n    }\n    this.makeList(this.pages[this.currentPage]);\n\n    const pager = this.menu.getElementsByClassName(\"pager\")[0]\n    const previousButton = pager.querySelector(\"#webime-previous\");\n    const nextButton = pager.querySelector(\"#webime-next\");\n\n    if (this.currentPage === 0) {\n      previousButton.classList.add(\"hidden\");\n    } else {\n      previousButton.classList.remove(\"hidden\");\n    }\n\n    if (this.currentPage + 1 >= this.pages.length) {\n      nextButton.classList.add(\"hidden\");\n    } else {\n      nextButton.classList.remove(\"hidden\");\n    }\n\n    if (this.currentPage === 0 && this.pages.length == 1) {\n      pager.classList.add(\"hidden\");\n    } else {\n      pager.classList.remove(\"hidden\");\n    }\n  }\n\n  previousPage() {\n    if (this.currentPage-1 >= 0) {\n      this.currentPage--;\n      this.makePage();\n    }\n  }\n\n  nextPage() {\n    if (this.pages.length > this.currentPage+1) {\n      this.currentPage++;\n      this.makePage();\n    }\n  }\n\n  _findLiTarget(el) {\n    if (!el) return [];\n    const index = el.getAttribute(\"data-index\");\n    return !index ? this._findLiTarget(el.parentNode) : [el, index];\n  }\n\n  showMenuForCollection(element, collectionIndex) {\n    if (element !== document.activeElement) {\n      this.placeCaretAtEnd(element);\n    }\n\n    this.current.collection = this.collection[collectionIndex || 0];\n    this.current.externalTrigger = true;\n    this.current.element = element;\n\n    if (element.isContentEditable)\n      this.insertTextAtCursor(this.current.collection.trigger);\n    else this.insertAtCaret(element, this.current.collection.trigger);\n\n    this.showMenuFor(element);\n  }\n\n  // TODO: make sure this works for inputs/textareas\n  placeCaretAtEnd(el) {\n    el.focus();\n    if (\n      typeof window.getSelection != \"undefined\" &&\n      typeof document.createRange != \"undefined\"\n    ) {\n      var range = document.createRange();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      var sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n    } else if (typeof document.body.createTextRange != \"undefined\") {\n      var textRange = document.body.createTextRange();\n      textRange.moveToElementText(el);\n      textRange.collapse(false);\n      textRange.select();\n    }\n  }\n\n  // for contenteditable\n  insertTextAtCursor(text) {\n    var sel, range, html;\n    sel = window.getSelection();\n    range = sel.getRangeAt(0);\n    range.deleteContents();\n    var textNode = document.createTextNode(text);\n    range.insertNode(textNode);\n    range.selectNodeContents(textNode);\n    range.collapse(false);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  // for regular inputs\n  insertAtCaret(textarea, text) {\n    var scrollPos = textarea.scrollTop;\n    var caretPos = textarea.selectionStart;\n\n    var front = textarea.value.substring(0, caretPos);\n    var back = textarea.value.substring(\n      textarea.selectionEnd,\n      textarea.value.length\n    );\n    textarea.value = front + text + back;\n    caretPos = caretPos + text.length;\n    textarea.selectionStart = caretPos;\n    textarea.selectionEnd = caretPos;\n    textarea.focus();\n    textarea.scrollTop = scrollPos;\n  }\n\n  hideMenu() {\n    if (this.menu) {\n      this.menu.style.cssText = \"display: none;\";\n      this.isActive = false;\n      this.menuSelected = 0;\n      this.pages = [];\n      this.currentPage = 0;\n      this.current = {};\n    }\n  }\n\n  selectItemAtIndex(index, originalEvent) {\n    index = parseInt(index);\n    if (typeof index !== \"number\" || isNaN(index)) return;\n    let item = this.current.filteredItems[index];\n    let content = this.current.collection.selectTemplate(item);\n\n    if (originalEvent.spaceSelection) {\n      content += \" \"; // add a space\n    } else if (originalEvent.wordBreak) {\n      content += originalEvent.key; // add the break character\n    }\n\n    if (content !== null) this.replaceText(content, originalEvent, item);\n  }\n\n  replaceText(content, originalEvent, item) {\n    this.range.replaceTriggerText(content, true, true, originalEvent, item);\n  }\n\n  _append(collection, newValues, replace) {\n    if (typeof collection.values === \"function\") {\n      throw new Error(\"Unable to append to values, as it is a function.\");\n    } else if (!replace) {\n      collection.values = collection.values.concat(newValues);\n    } else {\n      collection.values = newValues;\n    }\n  }\n\n  append(collectionIndex, newValues, replace) {\n    let index = parseInt(collectionIndex);\n    if (typeof index !== \"number\")\n      throw new Error(\"please provide an index for the collection to update.\");\n\n    let collection = this.collection[index];\n\n    this._append(collection, newValues, replace);\n  }\n\n  appendCurrent(newValues, replace) {\n    if (this.isActive) {\n      this._append(this.current.collection, newValues, replace);\n    } else {\n      throw new Error(\n        \"No active state. Please use append instead and pass an index.\"\n      );\n    }\n  }\n\n  detach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._detach(el[i]);\n      }\n    } else {\n      this._detach(el);\n    }\n  }\n\n  _detach(el) {\n    this.events.unbind(el);\n    if (el.tributeMenu) {\n      this.menuEvents.unbind(el.tributeMenu);\n    }\n\n    setTimeout(() => {\n      el.removeAttribute(\"data-tribute\");\n      this.isActive = false;\n      if (el.tributeMenu) {\n        el.tributeMenu.remove();\n      }\n    });\n  }\n}\n\nexport default Tribute;\n"],"names":["Array","prototype","find","Object","defineProperty","value","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","Event","TributeEvents","tribute","events","e","wordBreakChars","includes","key","element","boundKeydown","keydown","bind","boundKeyup","keyup","boundInput","input","addEventListener","removeEventListener","instance","shouldDeactivate","isActive","hideMenu","commandEvent","keyCode","suggestionIndex","callbacks","isWordBreak","console","log","keys","forEach","toLowerCase","inputEvent","menu","contains","target","parentNode","className","id","previousPage","nextPage","li","preventDefault","stopPropagation","nodeName","selectItemAtIndex","getAttribute","current","externalTrigger","setTimeout","updateSelection","allowSpaces","hasTrailingSpace","autocompleteMode","triggerChar","getKeyCode","isNaN","trigger","triggers","charCodeAt","mentionText","collection","menuShowMinLength","showMenuFor","eventKeyPressed","el","info","range","getTriggerInfo","mentionTriggerChar","selectedPath","mentionSelectedPath","selectedOffset","mentionSelectedOffset","_this","collectionItem","item","enter","filteredItems","menuSelected","escape","tab","space","spaceSelectsMatch","spaceSelection","up","count","selected","setActiveLi","scrollTop","scrollHeight","down","left","shiftKey","ctrlKey","metaKey","altKey","right","numeric","index","wordBreak","lis","querySelectorAll","parseInt","i","classList","add","selectClass","liClientRect","getBoundingClientRect","menuClientRect","bottom","scrollDistance","top","remove","elem","includeMargin","height","style","currentStyle","getComputedStyle","parseFloat","marginTop","marginBottom","TributeMenuEvents","menuEvents","menuClickEvent","click","menuContainerScrollEvent","debounce","windowResizeEvent","positionMenuAtCaret","getDocument","menuContainer","func","wait","immediate","timeout","context","_this2","args","callNow","clearTimeout","apply","TributeRange","iframe","contentWindow","scrollTo","coordinates","positionMenu","cssText","isContentEditable","getContentEditableCaretPosition","mentionPosition","getTextAreaOrInputUnderlinePosition","scrollIntoView","menuDimensions","width","offsetWidth","offsetHeight","menuIsOffScreen","isMenuOffScreen","menuIsOffScreenHorizontally","innerWidth","menuIsOffScreenVertically","innerHeight","targetElement","path","offset","childNodes","nextSibling","previousSibling","sel","getWindowSelection","createRange","setStart","setEnd","collapse","removeAllRanges","error","addRange","focus","text","requireLeadingSpace","originalEvent","replaceEvent","replaceTextSuffix","endPos","pasteHtml","myField","textSuffix","startPos","substring","selectionStart","selectionEnd","dispatchEvent","html","anchorNode","deleteContents","createElement","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","appendChild","insertNode","cloneRange","setStartAfter","getSelection","ctx","ce","contentEditable","getNodePositionInParent","push","reverse","getRangeAt","startOffset","selectedElem","workingNodeContent","textContent","selectStartOffset","textComponent","start","end","stopCharacters","inputText","idx","d","textBeforeCursor","substr","indexOfDelimiter","lastIndexOf","indexOf","wordsArray","autocompleteSeparator","split","menuAlreadyActive","isAutocomplete","selectionInfo","getContentEditableSelectedPath","getTextOfCurrentWord","mentionSelectedElement","effectiveRange","getTextPrecedingCurrentSelection","mostRecentTriggerCharPos","config","c","lastIndexWithLeadingSpace","test","currentTriggerSnippet","firstSnippetChar","leadingSpace","trim","regex","str","reversedStr","join","cidx","firstChar","match","triggerIdx","windowWidth","windowHeight","doc","documentElement","windowLeft","pageXOffset","scrollLeft","clientLeft","windowTop","pageYOffset","clientTop","menuTop","menuRight","menuBottom","menuLeft","Math","floor","ceil","dimensions","position","flipped","isFirefox","mozInnerScreenX","div","body","computed","whiteSpace","wordWrap","visibility","prop","overflowY","overflow","replace","span","rect","menuContainerIsBody","offsetTop","borderTopWidth","fontSize","offsetLeft","borderLeftWidth","getMenuDimensions","parentHeight","scrollStillAvailable","removeChild","selectedNodePosition","clientRect","elemTop","elemBottom","maxY","targetY","TributeSearch","search","pattern","array","filter","string","opts","pre","post","compareString","caseSensitive","skip","rendered","score","patternCache","traverse","render","cache","stringIndex","patternIndex","splice","calculateScore","slice","best","temp","pop","indices","arr","reduce","prev","extract","original","sort","a","b","compare","t","values","loadingItemTemplate","containerClass","itemClass","selectTemplate","menuItemTemplate","lookup","fillAttr","noMatchTemplate","searchOpts","menuItemLimit","menuPageLimit","pages","currentPage","Tribute","defaultSelectTemplate","defaultMenuItemTemplate","Error","warn","map","jQuery","get","constructor","NodeList","HTMLCollection","_attach","hasAttribute","ensureEditable","setAttribute","inputTypes","wrapper","ul","pager","currentMentionTextSnapshot","createMenu","tributeMenu","processValues","items","page","pageItemIndex","makePage","querySelector","noMatchEvent","fragment","_this3","_findLiTarget","movementY","makeList","getElementsByClassName","previousButton","nextButton","collectionIndex","activeElement","placeCaretAtEnd","insertTextAtCursor","insertAtCaret","selectNodeContents","createTextRange","textRange","moveToElementText","select","textNode","createTextNode","textarea","scrollPos","caretPos","front","back","content","replaceText","replaceTriggerText","newValues","concat","_append","_detach","unbind","removeAttribute","_this4","_isActive","val","matchItem"],"mappings":"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"}